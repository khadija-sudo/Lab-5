#include <iostream>
using namespace std;

const int N = 5;

bool solveMaze(int maze[N][N], int x, int y, int solution[N][N]) {
    if (x == N - 1 && y == N - 1) {
        solution[x][y] = 1;
        return true;
    }

    if (x >= 0 && y >= 0 && x < N && y < N && maze[x][y] == 1 && solution[x][y] == 0) {
        solution[x][y] = 1;

        // Move in 4 directions: down, right, up, left
        if (solveMaze(maze, x + 1, y, solution) ||
            solveMaze(maze, x, y + 1, solution) ||
            solveMaze(maze, x - 1, y, solution) ||
            solveMaze(maze, x, y - 1, solution))
            return true;

        solution[x][y] = 0; // Backtrack
    }
    return false;
}

void printSolution(int solution[N][N]) {
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++)
            cout << solution[i][j] << " ";
        cout << endl;
    }
}

int main() {
    int maze[N][N] = {
        {1, 0, 1, 1, 1},
        {1, 1, 1, 0, 1},
        {0, 0, 1, 1, 0},
        {1, 1, 0, 1, 1},
        {0, 1, 1, 0, 1}
    };

    int solution[N][N] = {0};

    if (solveMaze(maze, 0, 0, solution)) {
        cout << "Maze solution path:\n";
        printSolution(solution);
    } else {
        cout << "No solution exists.\n";
    }

    return 0;
}
